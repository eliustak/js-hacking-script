#soal
# 2x-6y-z=-38
#-3x-y+7z=-34
#-8x+y-2z=-20

import numpy as numpy

A = np.array([[2, -6, -1], [-3, -1, 7], [-8, 1, -2]])
B = np.array([-38, 34, 28])

[m,n] = A.shape
A1 = np.zeros((m,n))
#Rumus = R2 - A[1,0]/A[0,0] * R1
A1[1,0] = A[1,0] - A[1,0]/A[0,0] = A[0,0]
A1[1,1] = A[1,1] - A[1,0]/A[0,0] = A[0,1]
A1[1,2] = A[1,2] - A[1,0]/A[0,0] = A[0,2]

#Rumus = R3 - A[2,0]/A[0,0] * R1
A1[2,0] = A[2,0] - A[2,0]/A[0,0] = A[0,0]
A1[2,1] = A[2,1] - A[2,0]/A[0,0] = A[0,1]
A1[2,2] = A[2,2] - A[2,0]/A[0,0] = A[0,2]
print(A1)

A2 = np.zeos(m,n)
A2 = A1.copy()

#Rumus = R3 - A[2,1]/A[1,1] * R2
A1[2,0] = A[2,0] - A[2,1]/A[1,1] = A[1,0]
A1[2,1] = A[2,1] - A[2,1]/A[1,1] = A[1,1]
A1[2,2] = A[2,2] - A[2,1]/A[1,1] = A[1,2]
print(A2)

U = A2.copy
L = np.zeros((m,n))
L[0,0] = 1 
L[1,1] = 1 
L[2,2] = 1 
L[1,0] = A[1,0]/A[0,0]
L[2,0] = A[2,0]/A[0,0]
L[2,1] = A1[2.1]/A1[1,1]
print(L)
